---
import type { StoryblokClient } from "@storyblok/js";
import Main from "../layouts/Main.astro";
import { clearSlug } from "../utils/remove-end-slash";
import { storyblokApi } from "../utils/storyblok";
import {
  apiPlugin,
  storyblokInit,
  useStoryblok,
  StoryblokComponent,
} from "@storyblok/react";
import { bindedComponents } from "../utils/binded-component";
import { LoakCookieBanner } from "@loak/cookie-banner";

export async function getStaticPaths() {
  const parseSlug = (slug: string) => {
    switch (slug) {
      case "home":
        return undefined;
      case "404-error":
        return "404";
      default:
        return clearSlug(slug);
    }
  };

  const { data } = await (storyblokApi as StoryblokClient).get("cdn/stories", {
    version: import.meta.env.DEV ? 'draft':'published',
  });

  const filteredStories = data.stories.filter((story) => {
    if (story.content.component !== "configuration") {
      return true;
    }
    return false;
  });

  return filteredStories.map((page: any) => {
    return {
      params: {
        slug: parseSlug(page.full_slug),
      },
      props: page,
    };
  });
}

const { slug } = Astro.params;
const page = Astro.props;

const metatags = {
  title: page.content.meta_title,
  description: page.content.meta_description,
  image: page.content.meta_image?.filename ?? "",
};

storyblokInit({
  accessToken: import.meta.env.STORYBLOK_TOKEN,
  // bridge: true,
  use: [apiPlugin],
  components: bindedComponents,
});
---

<Main meta={metatags}>
  <StoryblokComponent blok={page.content} />
  <LoakCookieBanner cookies={[
    {
      label:'Google',
      script:"https://localhost:3000/google.js",
      id:"google"
    },
    {
      label:'Facebook pixel',
      script:"https://localhost:3000/facebook.js",
      id:"pixel"
    },
  ]} />
</Main>
