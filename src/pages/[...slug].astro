---
import type { StoryblokClient } from "@storyblok/js";
import Main from "../layouts/Main.astro";
import { clearSlug } from "../utils/remove-end-slash";
import { storyblokApi } from "../utils/storyblok";
import {
  apiPlugin,
  storyblokInit,
  useStoryblok,
  StoryblokComponent,
} from "@storyblok/react";
import { bindedComponents } from "../utils/binded-component";

export async function getStaticPaths() {
  const parseSlug = (slug: string) => {
    switch (slug) {
      case "home":
        return undefined;
      case "404-error":
        return "404";
      default:
        return clearSlug(slug);
    }
  };

  const { data } = await (storyblokApi as StoryblokClient).get("cdn/stories", {
    version: import.meta.env.DEV ? "draft" : "published",
  });

  const filteredStories = data.stories.filter((story) => {
    if (story.content.component !== "configuration") {
      return true;
    }
    return false;
  });

  return filteredStories.map((page: any) => {
    return {
      params: {
        slug: parseSlug(page.full_slug),
      },
      props: page,
    };
  });
}

const { slug } = Astro.params;
const page = Astro.props;

const metatags = {
  title: page.content.meta_title,
  description: page.content.meta_description,
  image: page.content.meta_image?.filename ?? "",
};

storyblokInit({
  accessToken: import.meta.env.STORYBLOK_TOKEN,
  // bridge: true,
  use: [apiPlugin],
  components: bindedComponents,
});
---

<Main meta={metatags}>
  <StoryblokComponent blok={page.content} />
  <script>

    const GA_TOKEN="G-F0NV64MXSD"
    const FB_TOKEN=""

    window.axeptioSettings = {
      clientId: "64463c8cca5e0f7f2a0e94c7",
    };

    (function (d, s) {
      var t = d.getElementsByTagName(s)[0],
        e = d.createElement(s);
      e.async = true;
      e.src = "//static.axept.io/sdk-slim.js";
      t.parentNode.insertBefore(e, t);
    })(document, "script");

    void 0 === window._axcb && (window._axcb = []);
    window._axcb.push(function (axeptio) {
      axeptio.on("cookies:complete", function (choices) {
        if (choices.google_analytics) {
          (function (d, s) {
            var t = d.getElementsByTagName(s)[0],
              e = d.createElement(s);
            e.async = true;
            e.src = "https://www.googletagmanager.com/gtag/js?id="+GA_TOKEN;
            t.parentNode.insertBefore(e, t);
          })(document, "script");
          window.dataLayer = window.dataLayer || [];
          function gtag() {
            dataLayer.push(arguments);
          }
          gtag("js", new Date());
          gtag("config", GA_TOKEN);
        }
        if (choices.facebook_pixel) {
          !(function (f, b, e, v, n, t, s) {
            if (f.fbq) return;
            n = f.fbq = function () {
              n.callMethod
                ? n.callMethod.apply(n, arguments)
                : n.queue.push(arguments);
            };
            if (!f._fbq) f._fbq = n;
            n.push = n;
            n.loaded = !0;
            n.version = "2.0";
            n.queue = [];
            t = b.createElement(e);
            t.async = !0;
            t.src = v;
            s = b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t, s);
          })(
            window,
            document,
            "script",
            "https://connect.facebook.net/en_US/fbevents.js"
          );
          fbq("init", FB_TOKEN);
          fbq("track", "PageView");
        }
      });
    });
  </script>
</Main>
